@page "/delete-account/{UserId:int}"
@using DatingApp.Services
@inject IDatingAppService DatingAppService
@inject NavigationManager Navigation

<h3>Delete Account</h3>

<div>
    <p>Are you sure you want to delete your account?</p>
</div>
<button @onclick="DeleteAccountAsync">Delete Account</button>
<button @onclick="GoBack">Go Back</button>

<div>
    @if (IsAccountDeleted.HasValue)
    {
        if (IsAccountDeleted.Value)
        {
            <p>Account deleted successfully!</p>
        }
        else
        {
            <p>@ErrorMessage</p>
        }
    }
</div>

@code {
    [Parameter] public int UserId { get; set; }
    private bool? IsAccountDeleted { get; set; }
    private string? ErrorMessage { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await DeleteAccountAsync(); // Automatically initiate the account deletion when the page loads
    }

    private async Task DeleteAccountAsync()
    {
        try
        {
            bool success = await DatingAppService.DeleteAccountAsync(UserId);

            if (success)
            {
                IsAccountDeleted = true;
                ErrorMessage = string.Empty;
            }
            else
            {
                IsAccountDeleted = false;
                ErrorMessage = "Account deletion failed.";
            }
        }
        catch (Exception ex)
        {
            IsAccountDeleted = false;
            ErrorMessage = ex.Message;
        }
    }

    private void GoBack()
    {
        Navigation.NavigateTo("/login", forceLoad: true);
    }
}
