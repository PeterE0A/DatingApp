@page "/like-profile"
@inject IDatingAppService DatingAppService
@using DatingApp.Entities




<h1>All Profiles</h1>
<br />

<div>
    <label><input type="radio" name="genderFilter" value="Male" @onchange="UpdateGenderFilter" /> Male</label>
    <label><input type="radio" name="genderFilter" value="Female" @onchange="UpdateGenderFilter" /> Female</label>
</div>

<table class="table">
    <thead>
        <tr>
            <td>UserID</td>
            <td>FullName</td>
            <td>Birthday</td>
            <td>Gender</td>
            <td>City</td>
            <td>PostalCode</td>
        </tr>
    </thead>
    <tbody>
        @foreach (var profile in filteredProfiles)
        {
            <tr>
                <td>@profile.UserID</td>
                <td>@profile.FullName</td>
                <td>@profile.Birthday</td>
                <td>@profile.Gender</td>
                <td>@profile.City</td>
                <td>@profile.PostalCode</td>
                <td>
                    <button class="btn btn-primary" @onclick="() => LikeProfileAsync(profile)">@(profile.IsLiked ? "Liked" : "Like")</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    private List<Profile> profiles;
    private List<Profile> filteredProfiles = new List<Profile>();
    private string? selectedGender;
    private int loggedInUserId;

    [Parameter]
    public int UserId { get; set; } // Bind the user ID from the URL parameter

    protected override async Task OnInitializedAsync()
    {
        loggedInUserId = UserId; // Assign the logged-in user's ID
        profiles = DatingAppService.GetProfiles(); // Make sure to await the method call
        await UpdateFilteredProfiles();
    }

    private async Task UpdateFilteredProfiles()
    {
        if (!string.IsNullOrEmpty(selectedGender))
        {
            filteredProfiles = await DatingAppService.GetProfilesByGender(selectedGender);
        }
        else
        {
            filteredProfiles = profiles;
        }
    }

    private async Task UpdateGenderFilter(ChangeEventArgs e)
    {
        selectedGender = e.Value.ToString();
       await UpdateFilteredProfiles();
    }

     private async Task LikeProfileAsync(Profile profile)
    {
        // Assuming you have an AddLikeAsync method in IDatingAppService
        bool success = await DatingAppService.AddLikeAsync(loggedInUserId, profile.UserID);

        if (success)
        {
            profile.IsLiked = true; // Assuming you have an IsLiked property in the Profile class
        }
    }
}
