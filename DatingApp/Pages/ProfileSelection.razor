@page "/profile-selection"
@using DatingApp.Services
@inject IDatingAppService DatingAppService
@inject NavigationManager Navigation

<h3>Profile Selection</h3>

<div>
    <label for="profileDropdown">Select a Profile:</label>
    <select id="profileDropdown" @bind="@SelectedProfileUserId">
        <option value="-1">Select...</option>
        @foreach (var profile in Profiles)
        {
            <option value="@profile.UserID">@profile.FullName</option>
        }
    </select>
    <button @onclick="ViewProfile" disabled="@SelectedProfileUserId == -1">View Profile</button>
</div>

@if (SelectedProfile != null)
{
    <h4>@SelectedProfile.FullName</h4>
    <p>Birthday: @SelectedProfile.Birthday.ToShortDateString()</p>
    <p>Gender: @SelectedProfile.Gender</p>
    <p>City: @SelectedProfile.City</p>
    <p>Postal Code: @SelectedProfile.PostalCode</p>
}

<button @onclick="Logout">Logout</button>

@code {
    private List<dynamic> Profiles { get; set; } = new List<dynamic>();
    private int SelectedProfileUserId { get; set; } = -1;
    private dynamic? SelectedProfile { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Profiles = await DatingAppService.GetAllProfilesAsync();
    }

    private async Task ViewProfile()
    {
        if (SelectedProfileUserId != -1)
        {
            SelectedProfile = await DatingAppService.GetProfileByIdAsync(SelectedProfileUserId);
        }
    }

    private void Logout()
    {
        DatingAppService.LogoutAsync();
        Navigation.NavigateTo("/login");
    }
}
