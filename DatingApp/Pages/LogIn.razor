@page "/login"
@using DatingApp.Services
@inject IDatingAppService DatingAppService

<h3>Login</h3>

<div>
    <label for="username">Username:</label>
    <input type="text" id="username" @bind="@Username" />
</div>
<div>
    <label for="password">Password:</label>
    <input type="password" id="password" @bind="@Password" />
</div>
<button @onclick="LogInAsync">Log In</button>

<div>
    @if (IsLoggedIn.HasValue)
    {
        if (IsLoggedIn.Value)
        {
            <p>Logged in successfully!</p>

               <div class="nav-item px-3">
                <NavLink class="nav-link" href="delete-account">
                    <span class="oi oi-trash" aria-hidden="true"></span> Delete Account
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="logout">
                    <span class="oi oi-power-standby" aria-hidden="true"></span> Logout
                </NavLink>
            </div>
        }
        else
        {
            <p>@ErrorMessage</p>
        }
    }
</div>

@code {
    private string? Username { get; set; }
    private string? Password { get; set; }
    private bool? IsLoggedIn { get; set; }
    private string? ErrorMessage { get; set; }

    private async Task LogInAsync()
    {
        try
        {
            if (!string.IsNullOrEmpty(Username) && !string.IsNullOrEmpty(Password))
            {
                bool? success = await DatingAppService.LogInAsync(Username, Password);

                if (success.HasValue && success.Value)
                {
                    IsLoggedIn = true;
                    ErrorMessage = string.Empty;
                }
                else
                {
                    IsLoggedIn = false;
                    ErrorMessage = "Log in failed.";
                }
            }
            else
            {
                IsLoggedIn = false;
                ErrorMessage = "Username and password cannot be empty.";
            }
        }
        catch (Exception ex)
        {
            IsLoggedIn = false;
            ErrorMessage = ex.Message;
        }
    }
}
