@page "/delete-profile"
@using DatingApp.Services
@inject IDatingAppService DatingAppService
@inject NavigationManager Navigation

<div class="container">
    <div class="card">
        <div class="content">
            <h3 class="title">Delete Profile</h3>
            <p class="subtitle">Are you sure you want to delete your profile?</p>
        </div>

        <form class="form">
            <div class="input-group">
                <label for="userId">User ID:</label>
                <input type="number" id="userId" @bind="@UserId" />
            </div>

            <div class="buttons">
                <button class="cancel-button" @onclick="GoBack">Cancel</button>
                <button class="delete-button" @onclick="DeleteProfileAsync">Delete Profile</button>
            </div>
        </form>

        <div class="result-message">
            @if (IsProfileDeleted.HasValue)
            {
                <p class="@(IsProfileDeleted.Value ? "success" : "error")">
                    @(IsProfileDeleted.Value ? "Profile deleted successfully!" : ErrorMessage)
                </p>
            }
        </div>
    </div>
</div>

<style>
    
    body {
        font-family: 'Inter', Arial, sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f7f9fc;
    }

    
    .container {
        display: flex;
        justify-content: center;
        align-items: flex-start;
        min-height: 100vh;
        padding-top: 50px; 
    }

    
    .card {
        background-color: #fff;
        border-radius: 10px;
        box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.1);
        padding: 20px;
        width: 100%;
        max-width: 400px;
        text-align: center;
    }

   
    .content {
        margin-bottom: 20px;
    }

    .title {
        font-size: 24px;
        font-weight: 600;
        color: #333;
    }

    .subtitle {
        font-size: 16px;
        color: #666;
    }

    
    .form {
        margin-bottom: 20px;
    }

    .input-group {
        margin-bottom: 15px;
        text-align: left;
    }

  
    .buttons {
        display: flex;
        justify-content: space-between;
    }

    .cancel-button,
    .delete-button {
        flex: 1;
        padding: 12px;
        border-radius: 5px;
        cursor: pointer;
        font-size: 16px;
        font-weight: 600;
        transition: background-color 0.3s ease-in-out, color 0.3s ease-in-out;
    }

    .cancel-button {
        background-color: #f0f1f6;
        color: #666;
        border: none;
        margin-right: 10px;
    }

    .delete-button {
        background-color: #ff5c5c;
        color: #fff;
        border: none;
        margin-left: 10px;
    }

 
    .result-message {
        margin-top: 20px;
    }

    .success {
        color: #28a745;
    }

    .error {
        color: #dc3545;
    }
</style>
@code {
    private int UserId { get; set; }
    private bool? IsProfileDeleted { get; set; }
    private string? ErrorMessage { get; set; }

    private async Task DeleteProfileAsync()
    {
        try
        {
            bool success = await DatingAppService.DeleteProfileAsync(UserId);

            if (success)
            {
                IsProfileDeleted = true;
                ErrorMessage = string.Empty;
            }
            else
            {
                IsProfileDeleted = false;
                ErrorMessage = "Profile deletion failed.";
            }
        }
        catch (Exception ex)
        {
            IsProfileDeleted = false;
            ErrorMessage = ex.Message;
        }
    }

    private void GoBack()
    {
        Navigation.NavigateTo("/login", forceLoad: true);
    }
}
