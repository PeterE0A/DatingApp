@page "/check-for-match/{LoggedInUserId:int}"
@inject IDatingAppService DatingAppService
@inject NavigationManager Navigation
@using DatingApp.Entities

<h3>Your Matches</h3>

<p>You are checking matches for User ID: @LoggedInUserId</p>

<table class="table">
    <thead>
        <tr>
            <th>Matched UserID</th>
            <th>Matched FullName</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var match in matchedProfiles)
        {
            <tr>
                <td>@match.UserID</td>
                <td>@match.FullName</td>
            </tr>
        }
    </tbody>
</table>

<button @onclick="GoToLikeProfile">Go to Like Profile</button>

@code {
    [Parameter] public int LoggedInUserId { get; set; }

    private List<Profile> matchedProfiles = new List<Profile>();

    protected override async Task OnInitializedAsync()
    {
        matchedProfiles = await LoadMatchedProfiles(LoggedInUserId);
    }

    private async Task<List<Profile>> LoadMatchedProfiles(int userId)
    {
        List<Profile> profiles = DatingAppService.GetProfiles();
        List<Profile> matches = new List<Profile>();

        foreach (var profile in profiles)
        {
            if (profile.UserID != userId)
            {
                bool isMatch = await DatingAppService.CheckForMatchAsync(userId, profile.UserID);

                if (isMatch)
                {
                    matches.Add(profile);
                }
            }
        }

        return matches;
    }

    private void GoToLikeProfile()
    {
        Navigation.NavigateTo($"/like-profile/{LoggedInUserId}");
    }
}
